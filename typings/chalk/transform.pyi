"""Type stubs for chalk.transform module."""
from typing import Any

from planar import Affine as Affine
from planar import BoundingBox as BoundingBox
from planar import Point as P2
from planar import Vec2 as V2
from typing_extensions import Self

# Add the monkey-patched methods to Vec2
class V2:
    def shear_x(self, factor: float) -> V2: ...
    def shear_y(self, factor: float) -> V2: ...
    def scale(self, factor: float) -> V2: ...

def from_radians(θ: float) -> float: ...
def to_radians(θ: float) -> float: ...
def remove_translation(aff: Affine) -> Affine: ...
def remove_linear(aff: Affine) -> Affine: ...
def transpose_translation(aff: Affine) -> Affine: ...
def apply_affine(aff: Affine, x: Any) -> Any: ...

class Transformable:
    def apply_transform(self, t: Affine) -> Self: ...
    def __rmul__(self, t: Affine) -> Self: ...
    def _app(self, t: Affine) -> Self: ...
    def scale(self, α: float) -> Self: ...
    def scale_x(self, α: float) -> Self: ...
    def scale_y(self, α: float) -> Self: ...
    def rotate(self, θ: float) -> Self: ...
    def rotate_rad(self, θ: float) -> Self: ...
    def rotate_by(self, turns: float) -> Self: ...
    def reflect_x(self) -> Self: ...
    def reflect_y(self) -> Self: ...
    def shear_y(self, λ: float) -> Self: ...
    def shear_x(self, λ: float) -> Self: ...
    def translate(self, dx: float, dy: float) -> Self: ...
    def translate_by(self, vector: Any) -> Self: ...

# Re-exports from planar
origin: P2
unit_x: V2
unit_y: V2
